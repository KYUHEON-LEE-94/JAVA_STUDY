제어문
	조건문
		if문
		switch문


	반복문
		for문
		while문
		do~while문


------------------------------------------------------------------------------------------------------------------------------------------
if문

if(조건식){
	..if문 내부 문장;
	(-> 조건식이 참일 때 수행하는 영역)
}	
if문 바깥 문장;


컴퓨터가 if문을 만나면 조건식을 확인
	> 조건식이 참이라면 if문 영역 내부로 들어가서 내부 코드를 실행
		>다 실행했다면 if문 바깥문장을 실행

	>조건식이 거짓이라면 if문 영역 내부로 들어가지 않고, 바로 if문 바깥문장을 실행

if ~ else 문법

	if(조건식){
		조건식 참일 때 실행되는 영역
	}else{
		조건식이 거짓일 때 실행되는 영역
	}	

else if 문법

	if(조건식1){
		조건식 1일 참일때 실행되는 영역
	}else if(조건식2){
		위의 조건식이 거짓일때, 조건식2가 참일때 실행되는 영역
	}else if(조건식3){
		위의 모든 조건식이 거짓일때, 조건식3이 참일때 실행되는 영역
	}else{
		위의 모든 조건식이 거짓일 때, 실행되는 영역
	}

---------------------------------------------------------------------------------------------------
제어문
	조건문

switch문(switch ~ case문)

문법
	switch(표현식){
		Case 값1:
			표현식이 값1일때 실행되는 영역;
			break;
		Case 값2:
			표현식이 값2일때 실행되는 영역;
			break;
		....

		Defualt:
			표현식이 위의 값들과 모두 다를 때 실행되는 영역;

-------------------------------------------------------------------------------------------------
삼항연산지 vs if문

	기본적으로 모든 삼항연산자로  작성된 코드는 if문으로 변경이 가능하다.
	그러나 모든 if문을 삼항연산자로는 바꿀 수 없다.
	조건이 간단하고 값만을 필요로 한다면 삼항연산자
	그 외에는 모두 if문 사용이 효율적

------------------------------------------------------------------------------------------------
반복문
	특정 코드를 반복할 때 사용한다.

	for문
		for(초기식; 조건식; 증감식;){
			반복할 코드;
		}

		> 컴퓨터가 for문을 처음 만나면 최초 1회 초기식을 실행한다.
			초기식을 실행 한 뒤 조건식을 판단
			>조건식이 참이라면 for문 안쪽을 실행행한다.
			>조건식이 거짓이라면 for문 내부로 들어가지 않고 for문 다음 문장을 실행한다.
		>for문 닫는 증괄호를 만나면 증감식을 실행한다.
		>증감식을 실행하고 조건식을 다시 확인한다.
			>위 과정 반복


		복합 대입 연산자
			num  += 5(num = num +5)
			num  -= 5(num = num -5)
			num *=3(num = num*3)
			num /=3
			num %=2
		증감식
			i++ (i+=1)(i = i+1)