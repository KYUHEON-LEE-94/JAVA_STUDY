클래스(class)
	객체의 설계도
	사용자가 만드는 새로운 유형의 자료형(type)
		여러가지 타입의 값을 한번에 저장할 수 있다.
		>>메소드도 넣어 놓을 수 있다.

인스턴스
	인스턴스는 클래스를 통해서 만들어진 형태
	클래스가 객체의 설계도라면 설계도를 통해 실질적으로 만들어진 형태가
		인스턴스

클래스 선언(정의)
	class 클래스명{

		클래스 본문
	
	}

-------------------------------------------------------------------------------------------
클래스의 구성
	클래스를 구성하는 요소를 클래스의 '멤버'라고 한다.

	-변수
		1.인스턴스 변수

			인스턴스 변수는 객체마다 가지는 고유한 변수

			인스턴스를 생성할 때 만들어지며

			인스턴스 마다 고유의 저장공간을 가지므로 각각의 다른 값을 가질수 있다.

			다량의 인스턴스를 생성할 때 인스턴스마다 특별한 값을 가져야 할 경우
				인스턴스 변수로 선언한다.

			-인스턴스 변수 선언
				자료형 변수명; // 기존의 변수 선언방식과 동일하다.

		2.클래스 변수

			클래스 변수는 모든 인스턴스가 공통된 값을 공유하는 병수

			즉, 모든 인스턴스가 동일한저장공간을 공유한다.

			클래스 변수는 클래스가 처음 메모리에 등록될 떄 생성된다.
				>인스턴스를 생성하지 않아도 사용할 수 있다.

			클래스 변수는 변수 맨 앞에 static 키워드를 붙여 사용한다.
	
			-클래스 변수 선언
				static 자료형 변수명; // 클래스 변수

	-메소드

	1. 인스턴스 메서드
		>> 인스턴스마다 개별적인 기능을 하는 메서드


	2. 클래스 메서드
		>>인스턴스가 모두 동일한 기능을 하는 메서드
		>>static이 붙어있으면 클래스 메서드

	>클래스 메서드는 객체를 생성하지 않아도 호출이 가능
		>>클래스가 정의되면 메모리에 등록

	>인스턴스 메서드는 객체를 생성'해야'만 호출이 가능
		>>인스턴스가 생성될 때(객체화) 메모리에 등록

	클래스의 구성 요소: 멤버

	클래스 변수, 클래스 메서드 -> 클래스 맴버(스태틱 메버)
	인ㅌ스턴스 변수, 인스턴스 메서드 -> 인스턴스 멤버

---------------------------------------------------------------------------------------------
인스턴스 메서드 --> 클래스 멤버     호출: 가능
인스턴스 메서드 --> 인스턴스 멤버  호출: 가능

클래스 메서드 --> 인스턴스 멤버     호출:불가능
클래스 메서드 --> 클래스 멤버        호출: 가능

---------------------------------------------------------------------------------------------

생성자(constructor)

	생성자란 인스턴스를 생성할 떄 호출되어 인스턴스 변수들을 초기화하는 일종의 메서드

	생성자의 이름은 클래스의 이름과 같으며 생성자에는 리턴이 없다.

	메모리에 객체를 등록시켜주는 기능이 정해져  있다.


	생성자를 정의한 것이 없다면 컴퓨터가 알아서 기본 생성자를 추가 해주지만
	
	생성자를 직업 정의한 것이 있다면 기본 생성자를 추가해주지 않는다.
		>>기본 생성자와 초기화 생성자를 모두 쓰고 싶다면 명시적으로 오버로딩 해야한다.

		메소드 오버로딩(OverLoading): 메소드 이름은 동일하게 사용하고, 매개변수를 다르게 하여
					   메소드를 사용, 정의하는 것

	1. 기본 생성자
		클래스명(){}

	2. 초기화 생성자
		클래스명(매개변수,...){
			this.멤버 변수 = 매개변수;
			....
		}





